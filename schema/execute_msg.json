{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "ExecuteMsg",
  "oneOf": [
    {
      "type": "object",
      "required": [
        "deposit"
      ],
      "properties": {
        "deposit": {
          "$ref": "#/definitions/DepositType"
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "burn"
      ],
      "properties": {
        "burn": {
          "type": "object",
          "required": [
            "amount",
            "token_address"
          ],
          "properties": {
            "amount": {
              "$ref": "#/definitions/Uint128"
            },
            "token_address": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "DepositType": {
      "oneOf": [
        {
          "type": "object",
          "required": [
            "instantiate"
          ],
          "properties": {
            "instantiate": {
              "$ref": "#/definitions/InstantiateMsg"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "mint"
          ],
          "properties": {
            "mint": {
              "type": "object",
              "required": [
                "recipient",
                "token_address"
              ],
              "properties": {
                "recipient": {
                  "type": "string"
                },
                "token_address": {
                  "type": "string"
                }
              }
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "InstantiateMsg": {
      "type": "object",
      "required": [
        "creator",
        "decimal",
        "description",
        "logo",
        "name",
        "symbol"
      ],
      "properties": {
        "creator": {
          "type": "string"
        },
        "decimal": {
          "type": "integer",
          "format": "uint8",
          "minimum": 0.0
        },
        "description": {
          "type": "string"
        },
        "logo": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "symbol": {
          "type": "string"
        }
      }
    },
    "Uint128": {
      "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
      "type": "string"
    }
  }
}
